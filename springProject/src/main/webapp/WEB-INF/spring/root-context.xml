<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<!-- 
		* root-context.xml
		서버 구동과 동시에 web.xml파일을 거쳐서 바로 로딩되는 문서 == preloading
		=> 서버구동과 동시에 바로 세팅(Bean등록)해야하는 내용들을 작성
		주로 DB접속정보, 트랜잭션 처리, 외부모듈연결 등등 
	
	
	 -->		
	 
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<!-- 어떤 DB에 접속할건지 정보 작성 / 해당 클래스 필드에 어떤 값을 넣어줄 지 작성-->
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="SPRING"/>
		<property name="password" value="SPRING"/>
	</bean>	 
		
	<!-- 
		객체가 필요할 때 마다 내부적으로 실행되는 코드
		BasicDataSource dataSource = new BasicDataSource();
		dateSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		dateSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
		dateSource.setUsername("SPRING");
		dateSource.setPassword("SPRING");
	 -->	
	
	<!-- 2단계. MyBatisSpring에서 제공하는 SQL명령을 실행하기 위한 Bean 등록  -->
	
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<!-- MyBatis설정파일의 위치를 지정해서 설정값들을 가져와야함 / 해당 클래스의 필드에 값을 넣어줌  -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 어떤 DB에 연결하는건지 연결을 위한 도구 참조 설정 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!--  
		객체가 필요할 때마다 내부적으로 실행되는 코드
		SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
		SqlSessionFactory.setConfihLocation("classpath:mybatis-config.xml");
		SqlSessionFactory.setDataSource(dataSource);
	 -->
	
	
	<!-- 3단계. SQL구문 실행을 위한 템플릿을 제공하는 도구 등록 -->
	<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
		<!-- 매개변수 생성자 참조 설정 -->
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>
	
	<!-- 
		객체가 필요할 때마다
		
		SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
		
		property : setter injection
		constructor-arg : constructor injection
	
	 -->
	 
	 <!--  
	 	xml문서에서 bean을 등록하는 방법
	 	
	 	1. bean태그를 작성한다.
	 	2. class속성에 풀 클래스명을 적는다.
	 	3. id속성에 id값을 적는다.
	
	  -->
	<!-- 
		bean이 등록되어 있는지 확인
		spring explore - Beans
	 --> 
	 
	 
	 
	 
	 
	 
	
	
	
		
		
		
		
		
		
		
</beans>
